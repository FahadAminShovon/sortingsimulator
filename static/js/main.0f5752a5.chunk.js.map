{"version":3,"sources":["util/resetArray.js","consts/animation.js","consts/colors.js","util/sortPaint.js","algorithms/selectionSort.js","algorithms/bubbleSort.js","components/ButtonGroup.jsx","components/Visualizer.jsx","App.jsx","index.jsx"],"names":["resetArray","setArr","setIsSorted","minn","maxx","arr","i","push","Math","random","elements","document","getElementsByClassName","length","style","backgroundColor","sortPaint","animations","setButtonDisable","len","setTimeout","selectionSort","minIndex","oldMinIndex","j","obj","start","iter","startVal","minVal","selectionSortAnimate","a","counter","incr","startIndex","height","bubbleSort","sorted","startIdx","endIdx","end","swap","temp","bubbleSortAnimate","ButtonGroup","useState","buttonDisable","isSorted","className","disabled","onClick","type","Bars","map","value","idx","key","Visualizer","useEffect","display","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0f5752a5.chunk.js","sourcesContent":["import { NUM_OF_BARS, MAXX } from \"../consts/animation\";\nimport { UNSORTED_COLOR } from \"../consts/colors\";\n\n// Generates unsorted array\nconst randomNumberGenerator = (minn, maxx) => {\n\treturn Math.random() * (maxx - minn) + minn;\n};\n\nexport const resetArray = (setArr, setIsSorted) => {\n\tconst arr = [];\n\tfor (let i = 0; i < NUM_OF_BARS; i++) {\n\t\tarr.push(randomNumberGenerator(1, MAXX));\n\t}\n\tsetArr(arr);\n\n\tconst elements = document.getElementsByClassName('array-item');\n\tfor (let i = 0; i < elements.length; i++) {\n\t\telements[i].style.backgroundColor = UNSORTED_COLOR;\n\t}\n\n\tif(setIsSorted)setIsSorted(false)\n};\n","export const ANIMATION_SPEED_MS = 30;\nexport const NUM_OF_BARS = 50;\nexport const MAXX = 72;\n","export const UNSORTED_COLOR = '#5fa8d3';\nexport const SORTED_COLOR = '#70c1b3';\nexport const ITERATE_COLOR = '#f25f5c';\nexport const START_COLOR = '#eb5e28';\nexport const SELECTED_COLOR = '#f4d35e';\n","import { SORTED_COLOR } from \"../consts/colors\";\nimport { ANIMATION_SPEED_MS } from \"../consts/animation\";\n// pains sorted bars green\nexport const sortPaint = (animations, setButtonDisable) => {\n\tconst elements = document.getElementsByClassName('array-item');\n\tconst len = elements.length;\n\tfor (let i = 0 ; i < len; i++){\n\t\tsetTimeout(() => {\n\t\t\telements[i].style.backgroundColor = SORTED_COLOR;\n\t\t}, (animations.length + i) * ANIMATION_SPEED_MS);\n\t}\n\tsetTimeout(() => {\n\t\tsetButtonDisable(false)\n\t}, (animations.length + len) * ANIMATION_SPEED_MS);\n}\n","/* eslint-disable no-param-reassign */\n\nimport {\n    UNSORTED_COLOR,\n    SORTED_COLOR,\n    START_COLOR,\n    SELECTED_COLOR,\n    ITERATE_COLOR,\n} from '../consts/colors';\n\nimport {\n    ANIMATION_SPEED_MS\n} from '../consts/animation';\n\n\nconst selectionSort = (arr) => {\n    const animations = []\n    for (let i = 0; i < arr.length - 1; i++) {\n        let minIndex = i;\n        let oldMinIndex = i;\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[j] <= arr[minIndex]) {\n                oldMinIndex = minIndex;\n                minIndex = j;\n            }\n            const obj = {\n                start: i,\n                minIndex,\n                oldMinIndex,\n                iter: j,\n            }\n            animations.push(obj)\n        }\n        const obj = {\n            start: i,\n            minIndex,\n            startVal: arr[i],\n            minVal: arr[minIndex],\n        }\n        arr[i] = arr[minIndex];\n        arr[minIndex] = obj.startVal;\n        animations.push(obj)\n    }\n\n    return animations;\n}\n\n\nexport const selectionSortAnimate = async (arr, setButtonDisable, setIsSorted) => {\n    await setButtonDisable(true);\n    await setIsSorted(true);\n\n    const elements = document.getElementsByClassName('array-item');\n    const animations = selectionSort(arr);\n\n    let counter = arr.length - 1;\n    let incr = counter;\n\n    for (let i = 0; i < animations.length; i++) {\n        if (i === counter) {\n            const {\n                start: startIndex,\n                minIndex,\n                startVal,\n                minVal,\n            } = animations[i];\n            setTimeout(() => {\n                elements[startIndex].style.height = `${minVal}vh`;\n                elements[startIndex].style.backgroundColor = SORTED_COLOR;\n                elements[minIndex].style.height = `${startVal}vh`;\n                if (minIndex !== startIndex)\n                    elements[\n                        minIndex\n                    ].style.backgroundColor = UNSORTED_COLOR;\n                if (startIndex === arr.length - 2) {\n                    elements[\n                        arr.length - 1\n                    ].style.backgroundColor = SORTED_COLOR;\n                    setButtonDisable(false);\n                }\n            }, i * ANIMATION_SPEED_MS);\n            counter += incr;\n            incr -= 1;\n        } else {\n            const {\n                start,\n                minIndex,\n                iter,\n                oldMinIndex\n            } = animations[i];\n            setTimeout(() => {\n                if (start === iter - 1)\n                    elements[\n                        arr.length - 1\n                    ].style.backgroundColor = UNSORTED_COLOR;\n                elements[start].style.backgroundColor = START_COLOR;\n                elements[iter].style.backgroundColor = ITERATE_COLOR;\n                if (iter !== 0)\n                    elements[\n                        iter - 1\n                    ].style.backgroundColor = UNSORTED_COLOR;\n                if (oldMinIndex !== start)\n                    elements[\n                        oldMinIndex\n                    ].style.backgroundColor = UNSORTED_COLOR;\n                elements[minIndex].style.backgroundColor = SELECTED_COLOR;\n            }, i * ANIMATION_SPEED_MS);\n        }\n    }\n};\n","/* eslint-disable no-param-reassign */\n\nimport {\n\tUNSORTED_COLOR,\n\tSTART_COLOR,\n\tSELECTED_COLOR,\n\tITERATE_COLOR,\n\tSORTED_COLOR,\n} from '../consts/colors';\n\nimport { ANIMATION_SPEED_MS } from '../consts/animation';\nimport { sortPaint } from '../util';\n\nconst bubbleSort = (arr) => {\n\tconst animations = [];\n\tfor (let i = 0; i < arr.length - 1; i++) {\n\t\tlet sorted = true;\n\t\tfor (let j = 0; j < arr.length - 1 - i; j++) {\n\t\t\tconst startIdx = j;\n\t\t\tconst endIdx = j + 1;\n\n\t\t\tconst obj = {\n\t\t\t\tstartIdx,\n\t\t\t\tendIdx,\n\t\t\t\tstart: arr[startIdx],\n\t\t\t\tend: arr[endIdx],\n\t\t\t};\n\n\t\t\tanimations.push({ ...obj }, { ...obj });\n\n\t\t\tif (arr[endIdx] < arr[startIdx]) {\n\t\t\t\tanimations[animations.length - 1].swap = true;\n\t\t\t\tconst temp = arr[endIdx];\n\t\t\t\tarr[endIdx] = arr[startIdx];\n\t\t\t\tarr[startIdx] = temp;\n\t\t\t\tsorted = false;\n\t\t\t}\n\n\t\t\tanimations.push({\n\t\t\t\t...obj,\n\t\t\t\tstart: arr[startIdx],\n\t\t\t\tend: arr[endIdx],\n\t\t\t});\n\t\t}\n\n\t\tif (sorted) break;\n\t}\n\n\treturn animations;\n};\n\nexport const bubbleSortAnimate = async (arr, setButtonDisable, setIsSorted) => {\n\tawait setButtonDisable(true);\n\tawait setIsSorted(true);\n\n\tconst elements = document.getElementsByClassName('array-item');\n\tconst animations = bubbleSort(arr);\n\n\tfor (let i = 0; i < animations.length; i++) {\n\t\tconst { startIdx, endIdx, start, end } = animations[i];\n\t\tif (i % 3 === 0) {\n\t\t\tsetTimeout(() => {\n\t\t\t\telements[startIdx].style.backgroundColor = START_COLOR;\n\t\t\t\telements[endIdx].style.backgroundColor = ITERATE_COLOR;\n\t\t\t\tif (startIdx === 0 && i !== 0)\n\t\t\t\t\telements[\n\t\t\t\t\t\tanimations[i - 1].endIdx\n\t\t\t\t\t].style.backgroundColor = SORTED_COLOR;\n\t\t\t}, i * ANIMATION_SPEED_MS);\n\t\t} else if (animations[i].swap) {\n\t\t\tsetTimeout(() => {\n\t\t\t\telements[endIdx].style.backgroundColor = SELECTED_COLOR;\n\t\t\t}, i * ANIMATION_SPEED_MS);\n\t\t} else {\n\t\t\tsetTimeout(() => {\n\t\t\t\telements[startIdx].style.height = `${start}vh`;\n\t\t\t\telements[endIdx].style.height = `${end}vh`;\n\t\t\t\telements[startIdx].style.backgroundColor = UNSORTED_COLOR;\n\t\t\t\telements[endIdx].style.backgroundColor = START_COLOR;\n\t\t\t}, i * ANIMATION_SPEED_MS);\n\t\t}\n\t}\n\tsortPaint(animations, setButtonDisable);\n};\n","import React, { useState }  from 'react'\nimport PropTypes from 'prop-types';\nimport { selectionSortAnimate, bubbleSortAnimate } from '../algorithms';\nimport { resetArray } from '../util';\n\n\nfunction ButtonGroup({arr, setArr}) {\n\tconst [buttonDisable, setButtonDisable] = useState(false);\n\tconst [isSorted, setIsSorted] = useState(false);\n\n\treturn (\n\t\t<div className='buttons'>\n\t\t<button\n\t\t\tdisabled={buttonDisable}\n\t\t\tclassName='btn reset-btn'\n\t\t\tonClick={() =>resetArray(setArr, setIsSorted)}\n\t\t>\n\t\t\tReset\n\t\t</button>\n\t\t<div className='mr-auto'></div>\n\t\t<div className='btn-group'>\n\t\t\t<button\n\t\t\t\tdisabled={buttonDisable || isSorted}\n\t\t\t\ttype='button'\n\t\t\t\tonClick={() => selectionSortAnimate(arr, setButtonDisable, setIsSorted)}\n\t\t\t\tclassName='btn sort-btn'\n\t\t\t>\n\t\t\t\tSelection Sort\n\t\t\t</button>\n\n\t\t\t<button\n\t\t\t\tdisabled={buttonDisable || isSorted}\n\t\t\t\ttype='button'\n\t\t\t\tonClick={() => bubbleSortAnimate(arr, setButtonDisable, setIsSorted)}\n\t\t\t\tclassName='btn sort-btn'\n\t\t\t>\n\t\t\t\tBubble Sort\n\t\t\t</button>\n\t\t</div>\n\t</div>\n\t)\n}\n\nButtonGroup.propTypes = {\n\tarr : PropTypes.array.isRequired,\n\tsetArr: PropTypes.func.isRequired\n}\n\nexport default ButtonGroup\n","import React, { useState, useEffect } from 'react';\nimport './Visualizer.css';\nimport PropTypes from 'prop-types';\nimport { resetArray } from '../util';\nimport ButtonGroup from './ButtonGroup';\n\nfunction Bars({arr}) {\n\treturn (\n\t\t<div className='array-container'>\n\t\t{arr.map((value, idx) => (\n\t\t\t<div\n\t\t\t\tkey={idx}\n\t\t\t\tclassName='array-item'\n\t\t\t\tstyle={{\n\t\t\t\t\theight: `${value}vh`,\n\t\t\t\t}}\n\t\t\t></div>\n\t\t))}\n\t</div>\n\t)\n}\n\nBars.propTypes = {\n\tarr : PropTypes.array.isRequired\n}\n\nconst Visualizer = () => {\n\tconst [arr, setArr] = useState([]);\n\n\tuseEffect(() => {resetArray(setArr)}, []);\n\n\treturn (\n\t\t<div className='' style={{display:'flex'}}>\n\t\t\t<ButtonGroup arr={arr} setArr={setArr}/>\n\t\t\t<Bars arr={arr}/>\n\t\t</div>\n\t);\n};\n\nexport default Visualizer;\n","import React from 'react';\nimport './App.css';\nimport Visualizer from './components/Visualizer';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Visualizer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}